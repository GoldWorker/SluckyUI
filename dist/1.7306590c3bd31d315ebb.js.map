{"version":3,"sources":["webpack:///./src/slucky/register/display-validInput.jsx","webpack:///./src/slucky/register/data-register.jsx","webpack:///./src/slucky/register/display-validSearchInput.jsx","webpack:///./src/slucky/lib/validator.js","webpack:///./src/slucky/register/display-register.jsx","webpack:///./src/slucky/register/highorder-register.jsx"],"names":["_react","__webpack_require__","l","o","a","e","__esModule","default","c","t","TypeError","u","ReferenceError","s","p","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ValidInput","Component","isValid","initial","trigger","_props","this","props","handleInputChange","data","name","placeholder","_react2","createElement","className","htmlFor","id","onChange","type","maxLength","style","handleValid","borderColor","required","opacity","str","message","_isomorphicFetch","_dataMessage","_store","state","verifyEmailSuccess","info","registerSuccess","verifyEmail","dispatch","pushInQueue","flag","_isomorphicFetch2","__API__","postVerifyEmail","method","credentials","body","JSON","then","json","error","catch","err","register","postRegister","registerReducer","arguments","length","action","assign","addReducer","y","r","g","leaveModule","validSearchInput","btnText","handleBtnClick","onClick","validator","config","types","result","getConfig","validate","x","hasOwnProperty","val","res","validateOne","checkerList","key","map","index","call","instruction","push","bind","isSubmit","isEmpty","isName","test","isEmail","isPw","isPwAgain","password","isValidString","isNaN","n","k","_validator","_displayValidInput","_displayValidSearchInput","_reactAddonsCssTransitionGroup","h","m","v","Register","_classCallCheck","_this","_possibleConstructorReturn","getPrototypeOf","email","emailVerifyCode","passwordAgain","registerConfirm","handleVerifyCodeSend","tar","setState","_reactAddonsCssTransitionGroup2","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","_displayValidSearchInput2","handleEmailSend","_displayValidInput2","handleFormConfirm","_reactRedux","_displayRegister","_dataRegister","mapStateToProps","mapDispatchToProps","connect"],"mappings":"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","file":"1.7306590c3bd31d315ebb.js","sourcesContent":["import React, {\n\tComponent,\n\tPropTypes\n} from 'react'\n\nclass ValidInput extends Component {\n\n\thandleValid(isValid, initial, trigger) {\n\t\tif (isValid || isValid === undefined) return initial\n\t\telse return trigger\n\t}\n\trender() {\n\t\tconst {\n\t\t\thandleInputChange,\n\t\t\tdata,\n\t\t\tname,\n\t\t\tplaceholder\n\t\t} = this.props\n\t\treturn (\n\t\t\t<div className=\"input pt8\">\n\t\t\t\t<label htmlFor={name+\"register\"} className=\"fs12 c-grey\">{name}</label>\n\t\t\t    <br/>\n\t\t        <input id={name+\"register\"} onChange={handleInputChange} type=\"text\" className=\"input-normal w288\"  placeholder={placeholder} maxLength=\"32\" style={this.handleValid(data.isValid,{'borderColor':'rgba(0, 0, 0, 0.12)'},{'borderColor':'#e74c3c'})} required/>\n\t\t\t    <br/>\n\t\t\t    <span className=\"input-ps fs12\" style={this.handleValid(data.isValid,{'opacity':'0'},{'opacity':'1'})}>{data.message.map((str)=>(str+\" \"))}</span>\n\t        </div>\n\t\t)\n\t}\n}\n\nValidInput.defaultProps = {\n\tdata: {\n\t\tmessage: []\n\t}\n}\n\nexport default ValidInput","// let state = {\r\n// \tverifyEmail: \"\",\r\n// \tinfo: \"\"\r\n// }\r\nimport fetch from 'isomorphic-fetch'\r\nimport {\r\n\tpushInQueue\r\n} from '../message/data-message'\r\nimport {\r\n\taddReducer\r\n} from '../store'\r\n\r\nconst verifyEmailSuccess = (data) => {\r\n\treturn {\r\n\t\ttype: \"VERIFY_EMAIL_SUCCESS\",\r\n\t\tinfo: data\r\n\t}\r\n}\r\n\r\nconst registerSuccess = (data) => {\r\n\treturn {\r\n\t\ttype: \"REGISTER_SUCCESS\",\r\n\t\tinfo: data\r\n\t}\r\n}\r\n\r\nexport const verifyEmail = (data) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(pushInQueue({\r\n\t\t\tinfo: \"邮件发送中\",\r\n\t\t\tflag: \"hint\"\r\n\t\t}))\r\n\t\tfetch(__API__.postVerifyEmail, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: \"include\",\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t}).then(data => data.json()).then(data => {\r\n\t\t\tconsole.log(data)\r\n\t\t\tif (data.error) {\r\n\t\t\t\tdispatch(pushInQueue({\r\n\t\t\t\t\tinfo: \"请确认邮箱是否正确或请查看邮箱里的验证码\",\r\n\t\t\t\t\tflag: \"hint\"\r\n\t\t\t\t}))\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(verifyEmailSuccess(data))\r\n\t\t\t\tdispatch(pushInQueue({\r\n\t\t\t\t\tinfo: \"发送成功，请查看邮箱里的验证码\",\r\n\t\t\t\t\tflag: \"success\"\r\n\t\t\t\t}))\r\n\r\n\t\t\t}\r\n\t\t}).catch(err => {\r\n\t\t\tif (err) throw err\r\n\t\t\tdispatch(pushInQueue({\r\n\t\t\t\tinfo: \"请网络检查网络连接\",\r\n\t\t\t\tflag: \"warning\"\r\n\t\t\t}))\r\n\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const register = (data) => {\r\n\tconsole.log(\"REGISTER\")\r\n\tconsole.log(data)\r\n\treturn dispatch => fetch(__API__.postRegister, {\r\n\t\tmethod: 'POST',\r\n\t\tcredentials: \"include\",\r\n\t\tbody: JSON.stringify(data)\r\n\t}).then(data => data.json()).then(data => {\r\n\t\tconsole.log(data)\r\n\t\tif (data.error) {\r\n\t\t\tdispatch(pushInQueue({\r\n\t\t\t\tinfo: data.error,\r\n\t\t\t\tflag: \"hint\"\r\n\t\t\t}))\r\n\t\t} else {\r\n\t\t\tdispatch(registerSuccess(data))\r\n\t\t\tdispatch(pushInQueue({\r\n\t\t\t\tinfo: \"恭喜，注册成功\",\r\n\t\t\t\tflag: \"success\"\r\n\t\t\t}))\r\n\r\n\t\t\t// window.location.href = \"http://www.brandf.cn/\"\r\n\t\t}\r\n\t}).catch(err => {\r\n\t\tif (err) throw err\r\n\t\tdispatch(pushInQueue({\r\n\t\t\tinfo: \"请网络检查网络连接\",\r\n\t\t\tflag: \"warning\"\r\n\t\t}))\r\n\r\n\t})\r\n}\r\n\r\nconst registerReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"VERIFY_EMAIL_SUCCESS\":\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tinfo: action.info\r\n\t\t\t})\r\n\t\tcase \"REGISTER_SUCCESS\":\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tinfo: action.info\r\n\t\t\t})\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\naddReducer(registerReducer, 'registerReducer')\r\n","import React, {\r\n\tComponent\r\n} from 'react'\r\n\r\nclass validSearchInput extends Component {\r\n\thandleValid(isValid, initial, trigger) {\r\n\t\tif (isValid || isValid === undefined) return initial\r\n\t\telse return trigger\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\thandleInputChange,\r\n\t\t\tdata,\r\n\t\t\tname,\r\n\t\t\tplaceholder,\r\n\t\t\tbtnText,\r\n\t\t\thandleBtnClick\r\n\t\t} = this.props\r\n\t\treturn (\r\n\t\t\t<div className=\"input\">\r\n\t\t        <label htmlFor={name+\"register\"} className=\"fs12 c-grey\">{name}</label>\r\n\t\t\t    <br/>\r\n\t\t\t\t<div className=\"search-box-normalize p-r\" style={this.handleValid(data.isValid,{'borderColor':'rgba(0, 0, 0, 0.12)'},{'borderColor':'#e74c3c'})}>\r\n\t\t\t\t    <input id={name+\"register\"} onChange={handleInputChange} type=\"email\" className=\"input input-normal w288\" placeholder={placeholder} maxLength=\"24\" required/>\r\n\t\t\t\t    <button type=\"button\" className=\"btn-n ptb6 plr16 search-btn\" onClick={handleBtnClick}>{btnText}</button>\r\n\t\t\t\t</div>\t\t            \r\n\t\t\t\t<br/>\r\n\t\t\t    <span className=\"input-ps fs12\" style={this.handleValid(data.isValid,{'opacity':'0'},{'opacity':'1'})}>{data.message.map((str)=>(str+\" \"))}</span>\r\n\t\t    </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nvalidSearchInput.defaultProps = {\r\n\tdata: {\r\n\t\tmessage: []\r\n\t}\r\n}\r\n\r\nexport default validSearchInput\r\n","// var data = {\n// \tname: test,\n// \tpw: 123,\n// \temail: \"asd@qq.com\"\n// }\n\n// vaildator.config = {\n// \tname: ['isNum'],\n// \tpw: ['isPw'],\n// \temail: ['isEmail']\n// }\n\n// validator.validate(data)\n\nvar validator = {\n\t\tconfig: {},\n\t\ttypes: {},\n\t\tresult: {},\n\t\tdata: {},\n\t\tgetConfig: function() {\n\t\t\treturn this.config\n\t\t},\n\t\tvalidate: function(data) {\n\t\t\tconsole.log(data)\n\t\t\tconsole.log(this.config)\n\t\t\tthis.data = data\n\t\t\tthis.result = {};\n\t\t\tfor (var x in data) {\n\t\t\t\tif (data.hasOwnProperty(x)) {\n\t\t\t\t\tvar val = data[x]\n\t\t\t\t\tvar res = this.validateOne(x, val)\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tthis.result[x] = res\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(this.result)\n\t\t\treturn this.result\n\t\t},\n\t\tvalidateOne: function(x, val) {\n\t\t\tvar checkerList = this.config[x]\n\t\t\tif (!checkerList) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tvar result = {\n\t\t\t\tkey: x,\n\t\t\t\tisValid: true,\n\t\t\t\tmessage: []\n\t\t\t}\n\n\t\t\t// 遍历检查器\n\t\t\tcheckerList.map(function(name, index) {\n\t\t\t\tvar checker = this.types[name].validate\n\n\t\t\t\t// 只处理非法的情况\n\t\t\t\tif (!checker.call(this, val)) {\n\t\t\t\t\tvar instruction = this.types[name].instruction\n\t\t\t\t\tresult.isValid = false\n\t\t\t\t\tresult.message.push(instruction)\n\t\t\t\t}\n\t\t\t}.bind(this))\n\t\t\treturn result\n\t\t},\n\t\t// 最终验证\n\t\tisSubmit: function() {\n\t\t\tfor (var x in this.config) {\n\t\t\t\tif (this.result[x] == undefined || !this.result[x].isValid) return false\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t}\n\t// 检查处理器\nvalidator.types.isEmpty = {\n\tvalidate: function(value) {\n\t\treturn value !== \"\"\n\t},\n\tinstruction: \"不能为空\"\n}\n\nvalidator.types.isName = {\n\tvalidate: function(value) {\n\t\treturn /^[\\u4E00-\\u9FA5A-Za-z0-9_]{1,10}$/.test(value)\n\t},\n\tinstruction: \"十个字以内，不能包含特殊字符\"\n}\n\nvalidator.types.isEmail = {\n\tvalidate: function(value) {\n\t\treturn /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value)\n\t},\n\tinstruction: \"邮箱格式不正确\"\n}\n\nvalidator.types.isPw = {\n\tvalidate: function(value) {\n\t\treturn /^[!@#$%^&*_A-Za-z0-9]{8,15}$/.test(value)\n\t},\n\tinstruction: \"由数组，字母，_@#$等组成，不少于8位\"\n}\n\nvalidator.types.isPwAgain = {\n\tvalidate: function(value) {\n\t\tconsole.log(this)\n\t\tif (this.data.password)\n\t\t\treturn this.data.password == value\n\t\telse return false\n\t},\n\tinstruction: \"重复输入的密码不相同\"\n}\n\nvalidator.types.isValidString = {\n\tvalidate: function(value) {\n\t\treturn !isNaN(value)\n\t},\n\tinstruction: \"invail Number value\"\n}\n\nexport default validator\n\n// {\n// \tname: {\n// \t\tkey: name,\n// \t\tisValid: true,\n// \t\tmessage: []\n// \t}\n// }","import React, {\r\n\tComponent\r\n} from 'react'\r\nimport validator from '../lib/validator.js'\r\nimport ValidInput from './display-validInput.jsx'\r\nimport ValidSearchInput from './display-validSearchInput.jsx'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\nclass Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tdata: {\r\n\t\t\t\temail: \"\",\r\n\t\t\t\temailVerifyCode: \"\",\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tpassword: \"\",\r\n\t\t\t\tpasswordAgain: \"\"\r\n\t\t\t},\r\n\t\t\tresult: {}\r\n\t\t}\r\n\t\tvalidator.config = {\r\n\t\t\temail: ['isEmpty', 'isEmail'],\r\n\t\t\temailVerifyCode: ['isEmpty'],\r\n\t\t\tname: ['isName', 'isEmpty'],\r\n\t\t\tpassword: ['isEmpty', 'isPw'],\r\n\t\t\tpasswordAgain: ['isEmpty', 'isPwAgain']\r\n\t\t}\r\n\t\tthis.registerConfirm = this.props.registerConfirm.bind(this)\r\n\t\tthis.handleVerifyCodeSend = this.props.handleVerifyCodeSend.bind(this)\r\n\t}\r\n\thandleInputChange(key, e) {\r\n\t\tlet tar = this.state.data\r\n\t\ttar[key] = e.target.value\r\n\t\tthis.setState({\r\n\t\t\tdata: tar\r\n\t\t})\r\n\t}\r\n\thandleFormConfirm(e) {\r\n\t\te.preventDefault()\r\n\t\tvar data = this.state.data\r\n\t\tvar result = validator.validate(data)\r\n\t\tthis.setState({\r\n\t\t\tresult: result\r\n\t\t})\r\n\t\tconsole.log(this.state.result)\r\n\t\tif (validator.isSubmit()) {\r\n\t\t\tthis.registerConfirm(this.state.data)\r\n\t\t}\r\n\t}\r\n\thandleEmailSend() {\r\n\t\tvar email = this.state.data.email\r\n\t\tvar res = validator.validateOne('email', email)\r\n\t\tthis.setState({\r\n\t\t\tresult: {\r\n\t\t\t\temail: res\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (res.isValid) {\r\n\t\t\tthis.handleVerifyCodeSend(email)\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"register-container\">\r\n\t\t\t\t<div className=\"register-mark\"></div>\r\n\t\t\t\t<ReactCSSTransitionGroup\r\n\t\t\t\t\t\t\t\ttransitionName=\"example\"\r\n\t\t\t\t\t\t\t\ttransitionAppear={true}\r\n\t\t\t\t\t\t\t\ttransitionAppearTimeout={500}\r\n\t\t\t\t\t\t\t\ttransitionEnter={false}\r\n\t\t\t\t\t\t\t\ttransitionLeave={false}>\r\n\t\t\t\t\t<form className=\"paper shadow p32 register-item svgMutiLine p-r\" key=\"registerForm\">\r\n\t\t\t\t\t\t{/* <svg\r\n\t\t\t\t\t\t\tclassName=\"btn-svgMutiLine\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 240 360\"\r\n\t\t\t\t\t\t\tversion=\"1.1\"\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t<rect className=\"shape\"></rect>\r\n    \t\t\t\t\t</svg> */}\r\n\t\t\t\t\t\t<p className=\"ta-c mb4 mt0\"><strong>注册</strong></p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<ValidSearchInput btnText=\"发送\" handleInputChange={this.handleInputChange.bind(this,'email')} handleBtnClick={this.handleEmailSend.bind(this)} name='邮箱' placeholder=\"\r\n\t\t\t\t\t\t常用邮箱\" data={this.state.result['email']}/>\r\n\t\t\t\t        <br/>\r\n\r\n\t\t\t\t\t\t<ValidInput handleInputChange={this.handleInputChange.bind(this,'emailVerifyCode')} name='验证码' placeholder=\"\r\n\t\t\t\t\t\t输入邮箱里的验证码\" data={this.state.result['emailVerifyCode']}/>\r\n\t\t\t\t        <br/>\r\n\r\n\t\t\t\t        <ValidInput handleInputChange={this.handleInputChange.bind(this,'name')} name='昵称' placeholder=\"\r\n\t\t\t\t\t\t不能含有标点\" data={this.state.result['name']}/>\r\n\t\t\t\t        <br/>\r\n\r\n\r\n\t\t\t\t        <ValidInput handleInputChange={this.handleInputChange.bind(this,'password')} name='密码' placeholder=\"\r\n\t\t\t\t\t\t由数组或字母组成\" data={this.state.result['password']}/>\r\n\t\t\t\t        <br/>\r\n\r\n\t\t\t\t        <ValidInput handleInputChange={this.handleInputChange.bind(this,'passwordAgain')} name='再次确认密码' placeholder=\"\r\n\t\t\t\t\t\t要跟楼上一样\" data={this.state.result['passwordAgain']}/>\r\n\t\t\t\t        <br/>\r\n\r\n\t\t\t\t        <div className=\"ta-c pt16\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn-n plr32 ptb6\" onClick={this.handleFormConfirm.bind(this)}>确认</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</ReactCSSTransitionGroup>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Register\r\n","import {\r\n\tconnect\r\n} from 'react-redux'\r\nimport Register from './display-register.jsx'\r\nimport {\r\n\tverifyEmail,\r\n\tregister\r\n} from './data-register.jsx'\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\thandleVerifyCodeSend: (email) => dispatch(verifyEmail({\r\n\t\t\temail: email\r\n\t\t})),\r\n\t\tregisterConfirm: (data) => dispatch(register(data))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n"],"sourceRoot":""}